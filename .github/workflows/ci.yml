name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Lint, Test, Build
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ticket_booking_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/ticket_booking_test?sslmode=disable
      REDIS_URL: localhost:6379
      PAYMENT_DEADLINE: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Install dependencies
        run: go mod download

      - name: Run gofmt (fail on unformatted code)
        run: |
          if [ "$(gofmt -l . | wc -l)" -gt 0 ]; then
            echo "Code not formatted"
            gofmt -l .
            exit 1
          fi

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6

      - name: Wait for Postgres
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -U postgres && break
            sleep 3
          done

      - name: Wait for Redis
        run: |
          for i in {1..10}; do
            redis-cli -h localhost ping && break
            sleep 3
          done

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out ./...

      - name: Build app
        run: go build -v .
